1 	БІЗНЕС-ВИМОГИ
1.1 	 Передумови


У сучасному світі етика та добробут тварин стають все більш важливими питаннями. Споживачі все більше стурбовані умовами життя тварин на фермах, а законодавці вводять суворіші правила щодо поводження з тваринами. Це робить важливим для фермерів не лише забезпечувати продуктивність тваринництва, але й гарантувати, що тварини живуть у здорових та комфортних умовах.
Традиційні методи моніторингу стану тварин на фермах часто є трудомісткими, ненадійними та неточними. Працівники ферм повинні вручну спостерігати за тваринами, що може бути складно зробити, особливо на великих фермах. Цей метод також може бути суб'єктивним, оскільки різні працівники можуть по-різному інтерпретувати поведінку тварин.
Програмна система для контролю стану умов існування тварин на фермах може допомогти вирішити ці проблеми, надаючи об'єктивну та надійну інформацію про стан тварин. Система може збирати дані з різних датчиків, таких як датчики температури, вологості, частоти серцевих скорочень та поведінки, щоб створити комплексну картину стану тварин. Ці дані можуть бути використані для раннього виявлення проблем зі здоров'ям, покращення умов життя тварин та підвищення продуктивності тваринництва.
Окрім етичних міркувань, існує ряд економічних причин для впровадження програмної системи для контролю стану умов існування тварин на фермах. Хворі тварини можуть призвести до значних фінансових втрат через зниження продуктивності, витрати на лікування та ветеринарні послуги, а також через можливу загибель тварин.
Програмна система для контролю стану умов існування тварин на фермах може допомогти фермерам мінімізувати ці втрати, ранньо виявляючи проблеми зі здоров'ям тварин та вживаючи заходів для їх запобігання. Крім того, система може допомогти фермерам покращити продуктивність тваринництва, оптимізуючи умови життя тварин та забезпечуючи їм все необхідне для здорового росту та розвитку.


1.2 	Бізнес-можливості


1.	Afimilk:
Плюси:
-	  Широкий спектр даних: Afimilk збирає дані про активність, жування, поведінку та фізіологічні показники корів, що дає фермерам комплексне уявлення про стан здоров'я та добробут тварин. Це може допомогти їм виявляти проблеми на ранній стадії, вживати заходів щодо запобігання та покращувати загальне управління стадом.
-  Оптимізація доїння: Afimilk може допомогти фермерам оптимізувати процес доїння, що може призвести до збільшення надоїв та покращення якості молока. Це може бути досягнуто за рахунок автоматичного регулювання частоти та тривалості доїння, а також виявлення корів, які потребують додаткової уваги.
Мінуси:
-  Складність: Деякі фермери можуть вважати систему Afimilk складною у використанні, особливо якщо вони не мають досвіду роботи з комп'ютерами або датчиками.
-  Точність даних: Деякі дані, які збирає Afimilk, такі як жування, можуть бути неточними або важкими для інтерпретації. Це може обмежити корисність цих даних для фермерів.
2. SCR Dairy:
Плюси:
- Відстеження руху та поведінки: SCR Dairy дозволяє фермерам відстежувати рух та поведінку своїх корів, що може допомогти їм виявляти проблеми зі здоров'ям, такі як кульгавість, мастит та респіраторні захворювання. Раннє виявлення цих проблем може допомогти фермерам вжити заходів щодо лікування тварин та запобігти поширенню хвороб.
-  Оптимізація годівлі та управління стадом: Дані, зібрані SCR Dairy, також можуть бути використані для оптимізації годівлі та управління стадом. Наприклад, фермери можуть використовувати ці дані, щоб визначити, які корови потребують більше або менше корму, а також для того, щоб краще організувати пасовища та інші ресурси.
Мінуси:
-  Вартість: Система SCR Dairy може бути дорогою в закупівлі та встановленні, що може зробити її недоступною для деяких фермерів.
-  Обслуговування: Камери та датчики SCR Dairy потребують регулярного обслуговування, що може бути додатковим тягарем для фермерів.
-  Інтерпретація даних: Деякі дані, які збирає SCR Dairy, такі як поведінка, можуть бути суб'єктивними та потребувати інтерпретації фермерами. Це може призвести до неточностей або помилок у прийнятті рішень.
3. DeLaval DelPro:
Плюси:
-  Якість молока: DeLaval DelPro збирає дані про якість молока, частоту доїння та стан вим'я, що може допомогти фермерам покращити якість молока та оптимізувати процес доїння. Це може призвести до збільшення доходів та покращення репутації ферми.
-  Раннє виявлення проблем з вим'ям: Система DeLaval DelPro може допомогти у ранньому виявленні проблем зі здоров'ям вим'я, таких як мастит, що може допомогти фермерам вжити заходів щодо лікування тварин та запобігти втратам молока.
Мінуси:
-  Вартість: Система DeLaval DelPro може бути дорогою в закупівлі та встановленні, що може зробити її недоступною для деяких фермерів.

	Також спільним мінусом всіх систем аналогів є орієнтованість лише на корів, вони не підтримують можливість використання для догляду за іншими свійськими тваринами.
На відміну від конкурентів, які зосереджені лише на певному типі тварин, наша система пропонує фермерам універсальне рішення для догляду за різними видами свійських тварин, включаючи свиней, кіз, овець, птахів та інших. Це робить її практичною та вигідною для фермерів, які мають різнопрофільне стадо, адже їм не потрібно купувати та обслуговувати окремі системи для кожного виду тварин.
Зручний мобільний додаток з інтуїтивно зрозумілим інтерфейсом, робить систему доступною та простою у використанні навіть для фермерів з обмеженими технічними знаннями. Це знижує бар'єри для впровадження та робить нашу систему привабливою для ширшого кола користувачів.



2 	КОНЦЕПЦІЯ РІШЕННЯ
2.1 	 Окреслення концепції


Головна ціль програмної системи, яку ми розробляємо, це полегшення роботи фермерів з догляду за станом умов існування тварин на фермах. Наш продукт надасть зручний інструмент для відстеження та аналізу різних параметрів тварин, дозволяючи фермерам легше доглядати за ними. Основною переваги нашої програмної системи є простий інтерфейс та можливість відслідковування показників тварин у реальному часі , завдяки цьому фермери можуть оперативно реагувати на будь-які зміни та проблеми у тварин.

2.2	       Головна функціональність


MF1.	Автоматизований моніторинг:
Система автоматично вимірює та відстежує:
	Температуру тіла тварини.
	Частоту серцевих скорочень та дихання тварини.
	Температуру в ангарі проживання тварин.
	Прийом їжі та води тваринами.
MF2.	Профілі тварин: фермери можуть створювати профілі для кожної тварини, вказуючи її конкретні дані.
MF3.	Сповіщення: система інформує фермерів про порушення умов проживання тварин.
MF4.	Аналітика стану тварин на основі зібраних даних
MF5.	Підтримка моніторингу стану різних видів тварин.
MF5.      Довідник з користування: інформація з інструкцією з користування застосунком.	
MF6.  Локалізація: система, підтримує англійську та українську мови, для зручного використання користувачами з різних країн.


3	РАМКИ ТА ОБМЕЖЕННЯ
3.1	   Рамки первинного випуску


Серверна частина має містити:
Реєстрація та авторизація користувачів:
	За допомогою JWT (JSON Web Token)
Управління тваринами:
	Створення та редагування профілів тварин.
	Збір та обробка даних з датчиків: температура, частота серцевих скорочень, активність.
Аналітика даних:
	Зберігання даних
	Виявлення аномалій: відхилення від нормальних параметрів.
	Оцінка стану здоров'я: раннє виявлення проблем зі здоров'ям.
	Прогнозування: передбачення майбутніх проблем.
Сповіщення:
	Автоматичне надсилання сповіщень про незадовільний стан тварин.
Адмін панель:
	Управління користувачами системи.
	Створення резервних копій бази даних.
Безпека:
	Шифрування конфіденційних даних, з використання сучасних алгоритмів, таких як таких як SHA256.
	Регулярне резервне копіювання даних.
	Контроль доступу за ролями.
Функціонал IoT пристрою має містити:
Збір даних про:
	Температуру тіла тварини та ангару, де вона проживає.
	Частота серцевих скорочень та дихання.
	Прийоми їжі та води.
Комунікація із сервером відбувається за допомогою HTTP-запитів.
Front-end частина має містити:
Користувач:
	Реєстрація та вхід користувача.
	Управління профілями тварин.
	Перегляд візуалізованих даних із IoT пристроїв для кожної з тварин або ангарів.
	Отримання сповіщень про незадовільний стан тварин.
Адмін:
	Реєстрація та вхід адміна.
	Управління користувачами системи.
	Створення резервних копій бази даних.
Також має бути реалізована локалізація та інтернаціоналізація: підтримка англійської та української мови.
Mobile частина має містити:
	Реєстрація та вхід користувача.
	Управління профілями тварин.
	Перегляд візуалізованих даних із IoT пристроїв для кожної з тварин або ангарів.
	Отримання сповіщень на телефон про незадовільний стан тварин.
Tакож має бути реалізована локалізація та інтернаціоналізація: підтримка англійської та української мови.



3.2	  Рамки наступних випусків


Серверна частина має містити:
Рекомендації:
	На основі зібраних даних, видавати рекомендації щодо догляду за твариною.
	Покращити аналіз даних відповідно до особливостей різних типів тварин.
Персоналізація параметрів:
	Користувач має змогу ставити власні параметри та їх прийнятні значення для кожної з тварин.
	Покращити аналіз даних відповідно до персоналізованих параметрів.
Функціонал IoT пристрою має містити:
GPS-трекер:
	Фермер зможе відслідковувати де знаходиться тварина.
	На основі даних зібраних трекером можна проаналізувати активність тварини.
Адаптувати пристрої до тварин:
	Зробити пристрої більш витривалими до пошкоджень.
	Зробити пристрої приємнішими для тварини.
Front-end та Mobile частини мають містити:
Візуалізація даних:
	Дані мають бути візуалізовані за допомогою графіків та діаграм для легшого сприйняття інформації.
Рекомендації:
	Користувач має змогу переглянути рекомендації щодо догляду за твариною на основі зібраних даних.
Персоналізація параметрів:
	Користувач має змогу ставити власні параметри та їх прийнятні значення для кожної з тварин.



4	БІЗНЕС-КОНТЕКСТ
4.3	   Робоче середовище


Cерверна частина: 
	Для створення серверної частини проекту буде використано фреймворк Nest.js з використанням мови програмування TypeScript. Ці технології забезпечать модульну, масштабовану та безпечну програму.
Клієнтська частина: 
	Для створення клієнтської частини проекту буде використано фреймворк Next.js з використанням мови програмування TypeScript. Nest.js забезпечить server-side rendering для швидкого завантаження сторінок та SEO, client-side routing для плавної навігації, data fetching для ефективного завантаження даних
Мобільний застосунок: 
	Для створення мобільної версії застосунку буде використана платформа MAUI з використанням мови програмування C#.
Пристрій IoT: 
	Для реалізації IoT-частини продукту буде використано Raspberry Pi з використанням мови програмування  TypeScript.
База даних: 
	PostgreSql. Це гарантує високу надійність, масштабованість та підтримку ACID-транзакцій.
Хмарні сервіси: 
	Front-end: частина буде розташована на сервісі Vercel. Він забезпечить швидке та безпечне розгортання та хостинг, а також CI/CD за допомогою Git-інтеграції. Також великим плюсом є глобальна мережа CDN, це покращує швидкість завантаження та зменшує затримку.
	Серверна частина: буде завантажена на AWS. Він гарантує масштабованість, надійність, високий рівень безпеки з сертифікатами SSL та протоколами шифрування, а також глобальну інфраструктуру з центрами обробки даних по всьому світу.
Забезпечення безпеки: 
	HTTPS: шифрування даних під час передачі. 
	Аутентифікація та авторизація: впровадження сучасних методів аутентифікації та авторизації для захисту від несанкціонованого доступу.
Доступність та надійність: 
	Серверна частина системи буде розміщена на серверах AWS з з глобальною інфраструктурою по всьому світу,можливістю швидкого масштабування, створення резервних копій та аварійного відновлення. 
	Клієнтська частина системи буде розміщена на серверах Vercel з можливістю аварійного відновлення. 
	Застосунок буде доступний для користувачів цілодобово без перерв у роботі.
